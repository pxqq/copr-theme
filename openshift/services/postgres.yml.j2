---
apiVersion: v1
kind: Secret
metadata:
  name: postgresql
type: Opaque
data:
  database-user: "{{ postgres_user | b64encode }}"
  database-password: "{{ postgres_password | b64encode }}"
  database-name: "{{ postgres_database_name | b64encode }}"

---
apiVersion: v1
kind: Service
metadata:
  name: postgresql
spec:
  ports:
    - name: postgresql
      port: 5432
      targetPort: 5432
  selector:
    name: postgresql

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: postgresql
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: "{{ '12Gi' if deployment == 'prod' else '1Gi' }}"

---
apiVersion: v1
kind: DeploymentConfig
metadata:
  name: postgresql
spec:
  replicas: 1
  selector:
    name: postgresql
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        name: postgresql
        test: test-postgresql-tag
    spec:
      containers:
        - env:
            - name: POSTGRESQL_USER
              valueFrom:
                secretKeyRef:
                  key: database-user
                  name: postgresql
            - name: POSTGRESQL_PASSWORD
              valueFrom:
                secretKeyRef:
                  key: database-password
                  name: postgresql
            - name: POSTGRESQL_DATABASE
              valueFrom:
                secretKeyRef:
                  key: database-name
                  name: postgresql
          image: "{{ postgresql_image }}"
          imagePullPolicy: IfNotPresent
          livenessProbe:
            exec:
              command:
                - /usr/libexec/check-container
                - --live
            initialDelaySeconds: 120
            timeoutSeconds: 10
          name: postgresql
          ports:
            - containerPort: 5432
              protocol: TCP
          readinessProbe:
            exec:
              command:
                - /usr/libexec/check-container
            initialDelaySeconds: 5
            timeoutSeconds: 1
          resources:
            limits:
              memory: 512Mi
          volumeMounts:
            - mountPath: /var/lib/pgsql/data
              name: postgresql-data
      restartPolicy: Always
      volumes:
        - name: postgresql-data
          persistentVolumeClaim:
            claimName: postgresql

  triggers:
    - imageChangeParams:
        automatic: true
        containerNames:
          - postgresql
        from:
          kind: ImageStreamTag
          name: postgresql:12-el8
          namespace: openshift
      type: ImageChange
    - type: ConfigChange
